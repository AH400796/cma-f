{"version":3,"file":"static/js/659.c60d8442.chunk.js","mappings":"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","sources":["helpers/notifycation.js","components/SignUpForm/SignUpForm.styled.jsx","components/SignUpForm/SignUpForm.jsx","components/VerifyForm/VerifyForm.styled.jsx","components/VerifyForm/VerifyForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notify = (type, text) => {\n  const toastConfig = {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  };\n  switch (type) {\n    case 'error':\n      toast.error(text, toastConfig);\n      break;\n    case 'warning':\n      toast.warn(text, toastConfig);\n      break;\n    case 'success':\n      toast.success(text, toastConfig);\n      break;\n    case 'info':\n      toast.info(text, toastConfig);\n      break;\n    default:\n      toast(text, toastConfig);\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 300px;\n  padding: 20px;\n  font-weight: 500;\n\n  color: #ff7b3e;\n  background: linear-gradient(\n    274.25deg,\n    #453432 23.51%,\n    rgba(69, 52, 50, 0.83) 50.89%,\n    rgba(117, 104, 77, 0.81) 308.27%\n  );\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 16px;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled(Field)`\n  max-width: 300px;\n  outline: transparent;\n  padding: 9px 15px 8px 15px;\n  font-size: 16px;\n  border: none;\n  border-radius: 3px;\n  color: #453432;\n  background-color: #c0bcba;\n  box-shadow: 1px 1px 6px #3d3d3d;\n\n  &::placeholder {\n    font-size: 14px;\n    color: #7a7a7a;\n  }\n`;\nexport const ErrWrapper = styled.span`\n  font-size: 12px;\n  color: red;\n  position: absolute;\n  bottom: -20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 100px;\n  height: 40px;\n\n  border-radius: 5px;\n\n  color: #ff7b3e;\n  background-color: #4e4039;\n  border: 2px solid #ff7b3e;\n  box-shadow: 1px 1px 3px #c9c1c1;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #ff7b3e;\n    color: #ffffff;\n  }\n\n  &:disabled {\n    color: #bdbdbd;\n    background-color: #4e4039;\n    border: 2px solid #bdbdbd;\n\n    cursor: auto;\n  }\n`;\n","import { useContext } from 'react';\nimport { AuthContext } from '../App/App';\nimport { notify } from 'helpers/notifycation';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { registerUser } from '../../services/API';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LoginFormStyled,\n  InputLabel,\n  Button,\n  Input,\n  ErrWrapper,\n  Wrapper,\n} from './SignUpForm.styled';\n\nconst regNotify =\n  'You have successfully registered. A verification code was sent to your email ';\n\nconst initialsValues = {\n  email: '',\n  password: '',\n};\n\nconst FormSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).required(),\n});\n\nexport default function SignUpForm() {\n  const { setUserEmail, setVerify } = useContext(AuthContext);\n\n  const handleSubmitForm = async (values, { resetForm }) => {\n    try {\n      const response = await registerUser(values);\n      if (response.status === 200) {\n        notify('info', regNotify);\n        setUserEmail(values.email);\n        setVerify(true);\n\n        resetForm();\n      }\n    } catch (error) {\n      notify('error', error.response.data.message);\n    }\n  };\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialsValues}\n        onSubmit={handleSubmitForm}\n        validationSchema={FormSchema}\n      >\n        {props => (\n          <LoginFormStyled>\n            <InputLabel>\n              Email\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"example@gmail.com\"\n              />\n              <ErrWrapper>\n                <ErrorMessage name=\"email\" />\n              </ErrWrapper>\n            </InputLabel>\n            <InputLabel>\n              Password\n              <Input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"********\"\n                title=\"The password must be at least 8 characters long, consist of only letters and numbers, and contain at least one capital letter \"\n              />\n              <ErrWrapper>\n                <ErrorMessage name=\"password\" />\n              </ErrWrapper>\n            </InputLabel>\n\n            <Button\n              type=\"submit\"\n              disabled={\n                (props.values.email !== '') & (props.values.password !== '')\n                  ? false\n                  : true\n              }\n            >\n              Sign up\n            </Button>\n          </LoginFormStyled>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\nexport const VerifyTextWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  padding: 0 20px 20px 20px;\n  font-weight: 500;\n\n  color: #ff7b3e;\n  background: linear-gradient(\n    274.25deg,\n    #453432 23.51%,\n    rgba(69, 52, 50, 0.83) 50.89%,\n    rgba(117, 104, 77, 0.81) 308.27%\n  );\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const VerifyText = styled.span`\n  text-align: center;\n  font-size: 16px;\n  margin: 20px 0 0;\n`;\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  width: 300px;\n  padding: 20px;\n  font-weight: 500;\n\n  color: #ff7b3e;\n  background: linear-gradient(\n    274.25deg,\n    #453432 23.51%,\n    rgba(69, 52, 50, 0.83) 50.89%,\n    rgba(117, 104, 77, 0.81) 308.27%\n  );\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  gap: 10px;\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const Verifyext = styled.span`\n  font-size: 16px;\n  margin: 20px 0 0;\n`;\n\nexport const Input = styled(Field)`\n  max-width: 300px;\n\n  padding: 9px 15px 8px 15px;\n  font-size: 16px;\n  border: none;\n  border-radius: 3px;\n  color: #453432;\n  background-color: #c0bcba;\n  box-shadow: 1px 1px 6px #3d3d3d;\n  outline: transparent;\n\n  &::placeholder {\n    font-size: 14px;\n    color: #7a7a7a;\n    background-color: #c0bcba;\n  }\n`;\n\nexport const CodeInput = styled(Field)`\n  align-self: center;\n  text-align: center;\n  width: 120px;\n  padding: 9px 15px 8px 15px;\n  font-size: 24px;\n  border: none;\n  border-radius: 3px;\n  color: #453432;\n  background-color: #c0bcba;\n  box-shadow: 1px 1px 6px #3d3d3d;\n  outline: transparent;\n  appearance: none;\n  margin: 0;\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  &[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n\nexport const ErrWrapper = styled.span`\n  font-size: 12px;\n  color: red;\n  position: absolute;\n  bottom: -20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 120px;\n  height: 40px;\n\n  border-radius: 5px;\n\n  color: #ff7b3e;\n  background-color: #4e4039;\n  border: 2px solid #ff7b3e;\n  box-shadow: 1px 1px 3px #c9c1c1;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #ff7b3e;\n    color: #ffffff;\n  }\n\n  &:disabled {\n    color: #bdbdbd;\n    background-color: #4e4039;\n    border: 2px solid #bdbdbd;\n\n    cursor: auto;\n  }\n`;\n","import { useState, useContext } from 'react';\nimport { AuthContext } from '../../components/App/App';\nimport { useNavigate } from 'react-router-dom';\n\nimport { verify } from '../../services/API';\nimport { reVerify } from '../../services/API';\nimport { notify } from 'helpers/notifycation';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LoginFormStyled,\n  InputLabel,\n  VerifyText,\n  Button,\n  CodeInput,\n  VerifyTextWrapper,\n  Wrapper,\n} from './VerifyForm.styled';\n\nconst FormSchema = yup.object().shape({\n  verificationCode: yup.number().required(),\n});\n\nexport default function VerifyForm() {\n  const { userEmail } = useContext(AuthContext);\n  const [verifyResponse, setVerifyResponse] = useState(null);\n  const navigate = useNavigate();\n\n  const handleSubmitForm = async (values, { resetForm }) => {\n    try {\n      const response = await verify(values);\n      if (response.status === 200) {\n        setVerifyResponse(response);\n        setTimeout(() => {\n          navigate('/login', { replace: true });\n        }, 3000);\n      }\n    } catch (error) {\n      notify('error', error.response.data.message);\n    }\n  };\n\n  const handleResend = async () => {\n    try {\n      const response = await reVerify({ email: userEmail });\n      if (response.status === 200) {\n        notify('info', response.data.message);\n      }\n    } catch (error) {\n      notify('error', error.response.data.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      {verifyResponse && verifyResponse.status === 200 && (\n        <VerifyTextWrapper>\n          <VerifyText>{verifyResponse.data.message}</VerifyText>\n        </VerifyTextWrapper>\n      )}\n      {!verifyResponse && (\n        <Formik\n          initialValues={{\n            verificationCode: '',\n          }}\n          onSubmit={handleSubmitForm}\n          validationSchema={FormSchema}\n        >\n          {props => (\n            <LoginFormStyled>\n              <InputLabel>\n                Your verification code\n                <CodeInput type=\"number\" name=\"verificationCode\" />\n              </InputLabel>\n\n              <Button\n                type=\"submit\"\n                disabled={props.values.verificationCode !== '' ? false : true}\n              >\n                Verify code\n              </Button>\n              <VerifyText>Didn't receive a verification code?</VerifyText>\n              <Button type=\"button\" onClick={handleResend}>\n                Resend code\n              </Button>\n            </LoginFormStyled>\n          )}\n        </Formik>\n      )}\n    </Wrapper>\n  );\n}\n","import { useContext } from 'react';\nimport { AuthContext } from '../../components/App/App';\n\nimport SignUpForm from 'components/SignUpForm';\nimport VerifyForm from 'components/VerifyForm';\n\nexport default function RegisterPage() {\n  const { verify } = useContext(AuthContext);\n\n  return (\n    <>\n      {!verify && <SignUpForm />}\n      {verify && <VerifyForm />}\n    </>\n  );\n}\n"],"names":["notify","type","text","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","toast","Wrapper","styled","LoginFormStyled","Form","InputLabel","Input","Field","ErrWrapper","Button","initialsValues","email","password","FormSchema","yup","shape","required","min","SignUpForm","useContext","AuthContext","setUserEmail","setVerify","handleSubmitForm","values","resetForm","registerUser","status","response","data","message","initialValues","onSubmit","validationSchema","props","name","placeholder","title","disabled","VerifyTextWrapper","VerifyText","CodeInput","verificationCode","VerifyForm","userEmail","useState","verifyResponse","setVerifyResponse","navigate","useNavigate","verify","setTimeout","replace","handleResend","reVerify","onClick","RegisterPage"],"sourceRoot":""}