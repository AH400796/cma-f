{"version":3,"file":"static/js/507.decf205f.chunk.js","mappings":"6IAGaA,G,QAAS,SAAAC,GAAI,OACxBC,EAAAA,EAAAA,IAAMD,EAAM,CACVE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WATe,E,6MCAbC,EAAUC,EAAAA,GAAAA,IAAH,+GAOPC,EAAgBD,EAAAA,GAAAA,IAAH,4GAObE,GAAkBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wYAoBfI,EAAaJ,EAAAA,GAAAA,MAAH,sJASVK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,4TAgBLO,EAAaP,EAAAA,GAAAA,KAAH,oGAOVQ,EAASR,EAAAA,GAAAA,OAAH,miB,GAiCSA,EAAAA,GAAAA,OAAH,ka,QCpFnBS,EAAiB,CACrBC,MAAO,GACPC,SAAU,IAGNC,EAAaC,EAAAA,KAAaC,MAAM,CACpCJ,MAAOG,EAAAA,KAAaH,QAAQK,WAC5BJ,SAAUE,EAAAA,KAAaG,IAAI,GAAGD,aAGjB,SAASE,IACtB,OAAkDC,EAAAA,EAAAA,YAAWC,EAAAA,GAArDC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aAC3BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,mCAAG,WAAOC,EAAP,mFAAiBC,UAAjB,mBAEEC,EAAAA,EAAAA,IAAUF,GAFZ,OAGG,OADlBG,EAFe,QAGRC,SACXV,GAAc,GACdC,EAASQ,EAASE,KAAKC,OACvBV,EAAaO,EAASE,KAAKrB,OAC3Ba,EAAS,IAAK,CAAEU,SAAS,KAPN,iDAUrB9C,EAAAA,EAAAA,GAAO,KAAM+C,SAVQ,yDAAH,wDActB,OACE,SAACnC,EAAD,WACE,SAAC,KAAD,CACEoC,cAAe1B,EACf2B,SAAUX,EACVY,iBAAkBzB,EAHpB,SAKG,SAAA0B,GAAK,OACJ,UAACpC,EAAD,YACE,UAACE,EAAD,oBAEE,SAACC,EAAD,CACEkC,KAAK,QACLC,KAAK,QACLC,YAAY,uBAEd,SAAClC,EAAD,WACE,SAAC,KAAD,CAAciC,KAAK,gBAGvB,UAACpC,EAAD,uBAEE,SAACC,EAAD,CAAOkC,KAAK,WAAWC,KAAK,WAAWC,YAAY,cACnD,SAAClC,EAAD,WACE,SAAC,KAAD,CAAciC,KAAK,mBAGvB,SAACvC,EAAD,WACE,SAACO,EAAD,CACE+B,KAAK,SACLG,WAC0B,KAAvBJ,EAAMZ,OAAOhB,MAA2C,KAA1B4B,EAAMZ,OAAOf,UAHhD,wBArBA,KAqCb,CCxFc,SAASgC,IACtB,OAAO,SAAC1B,EAAD,GACR,C","sources":["helpers/notifycation.js","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notify = text =>\n  toast(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n`;\n\nexport const LoginFormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 300px;\n  padding: 20px;\n  font-weight: 500;\n\n  color: #f85b12;\n  background: linear-gradient(\n    274.25deg,\n    #453432 23.51%,\n    rgba(69, 52, 50, 0.83) 50.89%,\n    rgba(117, 104, 77, 0.81) 308.27%\n  );\n  box-shadow: 2px 3px 5px #3d3d3d;\n  border-radius: 5px;\n`;\n\nexport const InputLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 16px;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled(Field)`\n  max-width: 300px;\n  outline: transparent;\n  padding: 9px 15px 8px 15px;\n  font-size: 16px;\n  border: none;\n  border-radius: 3px;\n  color: #453432;\n  background-color: #c0bcba;\n  box-shadow: 1px 1px 6px #3d3d3d;\n\n  &::placeholder {\n    font-size: 14px;\n    color: #7a7a7a;\n  }\n`;\nexport const ErrWrapper = styled.span`\n  font-size: 12px;\n  color: red;\n  position: absolute;\n  bottom: -20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 100px;\n  height: 40px;\n\n  border-radius: 5px;\n\n  color: #f85b12;\n  background-color: #4e4039;\n  border: 2px solid #f85b12;\n  box-shadow: 1px 1px 3px #c9c1c1;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #f85b12;\n    color: #ffffff;\n  }\n\n  &:disabled {\n    color: #bdbdbd;\n    background-color: #4e4039;\n    border: 2px solid #bdbdbd;\n\n    cursor: auto;\n  }\n`;\n\nexport const ButtonSignUp = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 600;\n  width: 100px;\n  height: 40px;\n\n  border-radius: 5px;\n\n  color: #f85b12;\n  background-color: #4e4039;\n  border: 2px solid #f85b12;\n  box-shadow: 1px 1px 3px #c9c1c1;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: #f85b12;\n    color: #ffffff;\n  }\n`;\n","import { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../../services/API';\nimport { AuthContext } from '../App/App';\nimport { notify } from 'helpers/notifycation';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  LoginFormStyled,\n  InputLabel,\n  Button,\n  Input,\n  ErrWrapper,\n  Wrapper,\n  ButtonWrapper,\n} from './LoginForm.styled';\n\nconst initialsValues = {\n  email: '',\n  password: '',\n};\n\nconst FormSchema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).required(),\n});\n\nexport default function LoginForm() {\n  const { setIsLoggedIn, setToken, setUserEmail } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleSubmitForm = async (values, { resetForm }) => {\n    try {\n      const response = await loginUser(values);\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n        setToken(response.data.token);\n        setUserEmail(response.data.email);\n        navigate('/', { replace: true });\n      }\n    } catch (error) {\n      notify(error.message);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialsValues}\n        onSubmit={handleSubmitForm}\n        validationSchema={FormSchema}\n      >\n        {props => (\n          <LoginFormStyled>\n            <InputLabel>\n              Email\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"example@gmail.com\"\n              />\n              <ErrWrapper>\n                <ErrorMessage name=\"email\" />\n              </ErrWrapper>\n            </InputLabel>\n            <InputLabel>\n              Password\n              <Input type=\"password\" name=\"password\" placeholder=\"********\" />\n              <ErrWrapper>\n                <ErrorMessage name=\"password\" />\n              </ErrWrapper>\n            </InputLabel>\n            <ButtonWrapper>\n              <Button\n                type=\"submit\"\n                disabled={\n                  (props.values.email !== '') & (props.values.password !== '')\n                    ? false\n                    : true\n                }\n              >\n                Log in\n              </Button>\n            </ButtonWrapper>\n          </LoginFormStyled>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n}\n","import LoginForm from 'components/LoginForm';\n\nexport default function LoginPage() {\n  return <LoginForm />;\n}\n"],"names":["notify","text","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Wrapper","styled","ButtonWrapper","LoginFormStyled","Form","InputLabel","Input","Field","ErrWrapper","Button","initialsValues","email","password","FormSchema","yup","shape","required","min","LoginForm","useContext","AuthContext","setIsLoggedIn","setToken","setUserEmail","navigate","useNavigate","handleSubmitForm","values","resetForm","loginUser","response","status","data","token","replace","message","initialValues","onSubmit","validationSchema","props","type","name","placeholder","disabled","LoginPage"],"sourceRoot":""}